---

- name: Initialize list of ifconfig fragments
  set_fact:
    networking_iface_ifconfig: []

- name: Initialize list of ifconfig ipv6 fragments
  set_fact:
    networking_iface_ifconfig: []

- name: Assume we're not dealing with a bridge
  set_fact:
    networking_iface_is_bridge: false

- name: Check if {{ item.iface }} actually is a bridge
  set_fact:
    networking_iface_is_bridge: true
  when: item.members is defined

- name: Initialize empty list for brigde-member fragments
  set_fact:
    networking_iface_members: []
  when: networking_{{ item.iface }}_is_bridge

- name: Generate fragment for static IPv4 configuration
  set_fact:
    networking_iface_ifconfig: "{{ networking_iface_ifconfig }} + [inet {{ item.ipv4_address | ipaddr }} netmask {{ item.ipv4_netmask | ipaddr }}]"
  when: item.ipv4_dhcp is not defined or item.ipv4_dhcp is sameas false

- name: Generate ifconfig fragment for members if we are dealing with a bridge
  set_fact:
    networking_iface_members: "{{ networking_iface_members }} + [addm {{ member }}]"
  with_items: item.members
  loop_control:
    loop_var: member
  when: networking_iface_is_bridge

- name: Combine all bridge members into a single ifconfig fragment
  set_fact:
    networking_iface_ifconfig: "{{ networking_iface_ifconfig }} + {{ networking_iface_members | join(' ') }} up"
  when: networking_iface_is_bridge

- name: Configure VLAN's on {{ item.iface }}
  lineinfile:
    path: /etc/rc.conf
    regexp: "^vlans_{{ item.iface }}="
    line: vlans_{{ item.iface }}="{{ item.vlans | join(' ') }}"
  notify: Force restart networking
  when: item.vlans is defined

- name: Instantiate any configured VLAN interfaces immediately
  meta: flush_handlers

- name: Configure static IPv4 on {{ item.iface }}
  lineinfile:
    path: /etc/rc.conf
    regexp: "^ifconfig_{{ item.iface|replace('.','_') }}="
    line: ifconfig_{{ item.iface|replace('.','_') }}="inet {{ item.ipv4_address }} netmask {{ item.ipv4_netmask }}"
  when: item.ipv4_dhcp is not defined or item.ipv4_dhcp is sameas false
  notify: Restart networking

- name: Configure IPv4 through DHCP on {{ item.iface }}
  lineinfile:
    path: /etc/rc.conf
    regexp: "^ifconfig_{{ item.iface|replace('.','_') }}="
    line: ifconfig_{{ item.iface|replace('.','_') }}="{{ networking_dhcp_type|upper }}"
  when: item.ipv4_dhcp is defined and item.ipv4_dhcp
  notify: Restart networking

- name: Configure static IPv6 on {{ item.iface }}
  lineinfile:
    path: /etc/rc.conf
    regexp: "^ifconfig_{{ item.iface|replace('.','_') }}_ipv6="
    line: ifconfig_{{ item.iface|replace('.','_') }}_ipv6="inet6 {{ item.ipv6_address }} prefixlen {{ item.ipv6_prefixlen }}"
  when: (item.ipv6_slaac is not defined or item.ipv6_slaac ) and (item.ipv6_address is defined and item.ipv6_prefixlen is defined)
  notify:
    - Disable rtsold
    - Restart networking

# --
# The order of these tasks is important because wee need rtsold to end up enabled
# even if the previous task disables it for an interface.
# --
- name: Configure IPv6 autoconfiguration via SLAAC on {{ item.iface }}
  lineinfile:
    path: /etc/rc.conf
    regexp: "^ifconfig_{{ item.iface|replace('.','_') }}_ipv6="
    line: ifconfig_{{ item.iface|replace('.','_') }}_ipv6="inet6 accept_rtadv"
  when: item.ipv6_slaac is defined and item.ipv6_slaac
  notify:
    - Restart networking
    - Enable rtsold
